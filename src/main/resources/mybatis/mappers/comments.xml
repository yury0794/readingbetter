<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="comments">

	<!-- 댓글 리스트, 회원 테이블에서 아이디 가져옴 -->
	<select id="list" parameterType="commentsvo" resultType="commentsvo">
		<![CDATA[
			select a.no, 
				   a.content, 
				   to_char(a.reg_date, 'yyyy-mm-dd') as regDate, 
				   a.state, 
				   a.notice_no as noticeNo, 
				   a.member_no as memberNo, 
				   b.id 
				from comments a, member b
				where b.no = a.member_no 
				order by a.no desc
		]]>
	</select>
	
	<!-- 기본키에 따른 댓글 조회, 회원 테이블에서 아이디 가져옴 -->
	<select id="getByNo" parameterType="long" resultType="commentsvo">
		<![CDATA[
			select a.no, 
				   a.content, 
				   to_char(a.reg_date, 'yyyy-mm-dd') as regDate, 
				   a.state, 
				   a.notice_no as noticeNo, 
				   a.member_no as memberNo, 
				   b.id 
				from comments a, member b
				where b.no = a.member_no and 
					  a.no = #{no}
		]]>
	</select>
	
	<!-- 페이징, 공지에 따른 댓글 조회, 신고받은 댓글 제외, 회원 테이블에서 아이디 가져옴 -->
	<select id="getByNoticeNo" parameterType="commentsvo" resultType="commentsvo">
		<![CDATA[
			select no, 
				   content, 
				   to_char(reg_date, 'yyyy-mm-dd') as regDate, 
				   state, 
				   notice_no as noticeNo, 
				   member_no as memberNo, 
				   id, 
				   rn 
				from (select c.*, rownum as rn 
						from (select a.*, b.id 
								from comments a, member b 
								where b.no = a.member_no and 
									  a.notice_no = #{noticeNo} and 
									  a.state=0 
								order by a.no desc) c)
				where (#{commentsPage} - 1) * 5 + 1 <= rn and rn <= #{commentsPage} * 5
		]]>
	</select>
	
	<!-- 공지에 따른 댓글들의 총 수, 신고받은 댓글 제외 -->
	<select id="listCount" parameterType="long" resultType="integer">
		<![CDATA[
			select count(*) from comments where notice_no=#{noticeNo} and state=0
		]]>
	</select>
	
	<!-- 댓글 추가 -->
	<insert id="insert" parameterType="commentsvo">
		<![CDATA[
			insert into comments 
				values(seq_comments.nextval,#{content},sysdate,0,#{noticeNo},#{memberNo})
		]]>
	</insert>
	
	<!-- 댓글 삭제 -->
	<delete id="delete" parameterType="long">
		<![CDATA[
			delete from comments where no=#{no}
		]]>
	</delete>
	
	<!-- 댓글 상태 변경 -->
	<update id="updateState" parameterType="commentsvo">
		<![CDATA[
			update comments set state=1 where no=#{keyNo}
		]]>	
	</update>
	
	<update id="updateStateToZero" parameterType="accusationvo">
		<![CDATA[
			update comments set state=0 where no=#{keyNo}
		]]>
	</update>
</mapper>
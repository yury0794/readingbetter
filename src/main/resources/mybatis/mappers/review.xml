<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="review">
	
	<!-- 리뷰 리스트, 회원 테이블에서 id 가져옴 -->
	<select id="list" parameterType="reviewvo" resultType="reviewvo">
		<![CDATA[
			select a.no, 
				   a.review, 
				   to_char(a.reg_date, 'yyyy-mm-dd') as regDate, 
				   a.state, 
				   a.book_no as bookNo, 
				   a.member_no as memberNo, 
				   b.id 
				from review a, member b 
				where b.no = a.member_no
		]]>
	</select>

	<!-- 기본키에 따른 리뷰 조회, 회원 테이블에서 id 가져옴 -->
	<select id="getByNo" parameterType="long" resultType="reviewvo">
		<![CDATA[
			select a.no, 
				   a.review, 
				   to_char(a.reg_date, 'yyyy-mm-dd') as regDate, 
				   a.state, 
				   a.book_no as bookNo, 
				   a.member_no as memberNo, 
				   b.id 
				from review a,member b 
				where b.no = a.member_no and a.no = #{no}
		]]>
	</select>
	
	<!-- 페이징, 책번호에 따른 리뷰 조회, 신고당한 리뷰 제외, 회원 테이블에서 id 가져옴 -->
	<select id="getByBookNo" parameterType="reviewvo" resultType="reviewvo">
		<![CDATA[
			select no, 
				   replace(review, '_', ' ') review, 
				   to_char(reg_date, 'yyyy-mm-dd') as regDate, 
				   book_no as bookNo, 
				   member_no as memberNo, 
				   id, 
				   rn 
				from (select c.*, rownum as rn 
						from (select a.*, b.id 
								from review a, member b 
								where b.no = a.member_no and 
									  a.book_no = #{bookNo} and 
									  a.state = 0 
								order by a.no desc) c)
				where (#{reviewPage} - 1) * 5 + 1 <= rn and rn <= #{reviewPage} * 5
			
		]]>
	</select>
	
	<!-- 페이징, 책번호에 따른 리뷰 조회, 신고당한 리뷰 제외, 회원 테이블에서 id 가져옴 -->
	<select id="getListApp" parameterType="reviewvo" resultType="reviewvo">  
		<![CDATA[
 			select no, 
 				   review, 
 				   to_char(reg_date, 'yyyy-mm-dd') as regDate, 
 				   book_no as bookNo, 
 				   member_no as memberNo, 
 				   id, 
 				   rn 
 				from (select c.*, rownum as rn 
 						from (select a.*, b.id 
 								from review a, member b 
 								where b.no = a.member_no and 
 									  a.book_no = #{bookNo} and 
 									  a.state = 0 
 								order by a.no desc) c)   
 		]]> 
	</select> 
	
	<!-- 책번호에 따른 리뷰 총 수, 신고당한 리뷰 제외 -->
	<select id="listCount" parameterType="long" resultType="integer">
		<![CDATA[
			select count(*) from review where book_no=#{bookNo} and state=0
		]]>
	</select>

	<!-- 리뷰 삭제 -->
	<delete id="delete" parameterType="Long">
		<![CDATA[
			DELETE FROM review WHERE NO = #{no}
		]]>
	</delete>

	<!-- 리뷰 추가 -->
	<insert id="insert" parameterType="reviewvo">
		<![CDATA[
			insert into review 
				values(seq_review.nextval,#{review},sysdate,0,#{bookNo},#{memberNo})
		]]>
	</insert>
	
	<!-- 리뷰 상태 업데이트 -->
	<update id="updateState" parameterType="reviewvo">
		<![CDATA[
			update review set state=1 where no=#{no}
		]]>
	</update>
	
	<update id="updateStateToZero" parameterType="accusationvo">
		<![CDATA[
			update review set state=0 where no=#{keyNo}
		]]>
	</update>
</mapper>